[env]
DEVELOPMENT = false
RELEASE = false
LIBC_SOURCES = { glob = "${PROJECT_ROOT}/lib/libc/**/*.c", include_files = true, include_dirs = false }
KERNEL_SOURCES = { glob = "./main/**/*.c", include_files=true, include_dirs=false }
X86_BTL_SOURCES = "./lib/boot/asm/x86_64.index.s"
ARM_BTL_SOURCES = "./lib/boot/asm/arm64.index.s"
X86_C_FLAGS = [
  "--include-directory='./lib'",
  "-ffreestanding",
  "-nostdlib",
  "-nostartfiles",
  "-target x86_64_none_elf",
  "-march x86_64",
]
ARM_C_FLAGS = [
  "--include-directory='./lib'",
  "-ffreestanding",
  "-nostdlib",
  "-nostartfiles",
  "-target armv8-none-eabi",
  "-march arm64",
]

[env.development]
DEVELOPMENT = true

[env.release]
RELEASE = true

[tasks.clean]
command = "rm"
args = [
  "-r",
  "--force",
  "${PROJECT_ROOT}/build_*",
]

[tasks.format]
command = "clang-format"
args = [
  "${@}",
]

[tasks.format_src]
command = "clang-format"
args = [
  "--style=file",
  "main/**/*.c",
  "lib/**/*.c",
]

# X86 BUILD INSTRUCTIONS

[tasks.build_x86]
command = "clang"
args = [
  "-T lib/link/x86.link.ld",
  "-o jwff_sys3.bin",
  "jwff_febl.o",
  "jwff_kernel.o",
  "${X86_C_FLAGS}",
]
dependencies = [
  "format_src",
  "clean",
  "build_asm_x86",
  "build_kernel_x86",
]

[tasks.build_kernel_x86]
command = "clang"
args = [
  "-o jwff_kernel.o",
  "${X86_KERNEL_SOURCES}",
  "${X86_C_FLAGS}",
]
dependencies = [
  "format_src",
]

[tasks.build_asm_x86]
command = "clang"
args = [
  "-o jwff_febl.o",
  "${X86_BTL_SOURCES}",
  "${X86_C_FLAGS}",
]

# ARM64 BUILD INSTRUCTIONS

[tasks.build_arm64]
command = "clang"
args = [
  "-T lib/link/arm64.link.ld",
  "-o jwff_sys3.bin",
  "jwff_febl.o",
  "jwff_kernel.o",
  "${ARM_C_FLAGS}",
]
dependencies = [
  "format_src",
  "clean",
  "build_asm_arm64",
  "build_kernel_arm64",
]

[tasks.build_asm_arm64]
command = "clang"
args = [
  "-o jwff_febl.o",
  "${ARM_BTL_SOURCES}",
  "${ARM_C_FLAGS}",
]
dependencies = [
  "format_src",
]

[tasks.build_kernel_arm64]
command = "clang"
args = [
  "-o jwff_kernel.o",
  "${KERNEL_SOURCES}",
  "${ARM_C_FLAGS}",
]
dependencies = [
  "format_src",
]
